% script_test_fcn_Path_cleanPathFromForwardBackwardJogs
% Tests the function: fcn_Path_cleanPathFromForwardBackwardJogs

% Revision history
% 2020_01_09
% -- first write of the code
% -- need to add more test cases
% 2025_06_30
% -- testing more with real-world cases
% 2025_08_02
% - Added Bug Test Case 90004
%   * BUG - real-world example that was not previously working
% 2025_08_05
% - In script_test_fcn_Path_cleanPathFromForwardBackwardJogs
%   % * Cleaned up variable names
%   % * Added jogAngleThreshold input option
%   % * Added Bug Test Case 90005 that shows need for this input
%   % * Fixed Bug shown in case 90002, which needed jogAnglethreshold to
%   %   % work



close all;

%% Demonstration cases
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% _____                                 _             _   _                _____
% |  __ \                               | |           | | (_)              / ____|
% | |  | | ___ _ __ ___   ___  _ __  ___| |_ _ __ __ _| |_ _  ___  _ __   | |     __ _ ___  ___  ___
% | |  | |/ _ \ '_ ` _ \ / _ \| '_ \/ __| __| '__/ _` | __| |/ _ \| '_ \  | |    / _` / __|/ _ \/ __|
% | |__| |  __/ | | | | | (_) | | | \__ \ |_| | | (_| | |_| | (_) | | | | | |___| (_| \__ \  __/\__ \
% |_____/ \___|_| |_| |_|\___/|_| |_|___/\__|_|  \__,_|\__|_|\___/|_| |_|  \_____\__,_|___/\___||___/
% See: http://patorjk.com/software/taag/#p=display&v=0&f=Big&t=Demonstration%20Cases
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All demonstration case figures start with the number 1

%% Basic call example
figNum = 10001;
titleString = sprintf('Basic call example, eliminating first point');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

pathWithJogs = [0 0; 1 1; 2 2; 3.3 3.36; 2.5 2.9; 3.5 3.6; 5 5];
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (figNum));
title(titleString, 'Interpreter','none');

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Check variable values
assert(isequal(pathWithNoJogs,[0 0; 1 1; 2 2; 3.3 3.36; 3.5 3.6; 5 5]));

% Make sure plot opened up
assert(isequal(get(gcf,'Number'),figNum));

%% DEMO: showing jog that overlaps in forward/back
figNum = 10002;
titleString = sprintf('DEMO: showing jog that overlaps in forward/back');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

pathWithJogs = [0 0; 1 0; 1.5 0; 0.8 0; 2 2; 3 3];
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (figNum));
title(titleString, 'Interpreter','none');

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% % Check variable values
% assert(isequal(pathWithNoJogs,[0 0; 1 1; 2 2; 3.3 3.36; 3.5 3.6; 5 5]));

% Make sure plot opened up
assert(isequal(get(gcf,'Number'),figNum));

%% Fast Mode Tests
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  ______        _     __  __           _        _______        _
% |  ____|      | |   |  \/  |         | |      |__   __|      | |
% | |__ __ _ ___| |_  | \  / | ___   __| | ___     | | ___  ___| |_ ___
% |  __/ _` / __| __| | |\/| |/ _ \ / _` |/ _ \    | |/ _ \/ __| __/ __|
% | | | (_| \__ \ |_  | |  | | (_) | (_| |  __/    | |  __/\__ \ |_\__ \
% |_|  \__,_|___/\__| |_|  |_|\___/ \__,_|\___|    |_|\___||___/\__|___/
%
%
% See: http://patorjk.com/software/taag/#p=display&f=Big&t=Fast%20Mode%20Tests
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Figures start with 8

close all;
fprintf(1,'Figure: 8XXXXXX: Demo of fast mode cases\n');

%% Basic example - NO FIGURE
figNum = 80001;
fprintf(1,'Figure: %.0f: Demo of fast mode, empty figNum\n',figNum);
figure(figNum); close(figNum);

pathWithJogs = [0 0; 1 1; 2 2.2; 3.3 3; 2.5 2.9; 3.5 3.6; 5 5];
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), ([]));

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Make sure plot did NOT open up
figHandles = get(groot, 'Children');
assert(~any(figHandles==figNum));


%% Basic fast mode - NO FIGURE, FAST MODE
figNum = 80002;
fprintf(1,'Figure: %.0f: Demo of fast mode, figNum=-1\n',figNum);
figure(figNum); close(figNum);

pathWithJogs = [0 0; 1 1; 2 2.2; 3.3 3; 2.5 2.9; 3.5 3.6; 5 5];
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (-1));

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Make sure plot did NOT open up
figHandles = get(groot, 'Children');
assert(~any(figHandles==figNum));


%% Compare speeds of pre-calculation versus post-calculation versus a fast variant
figNum = 80003;
fprintf(1,'Figure: %.0f: Fast mode comparisons\n',figNum);
figure(figNum);
close(figNum);

pathWithJogs = [0 0; 1 1; 2 2.2; 3.3 3; 2.5 2.9; 3.5 3.6; 5 5];
jogAngleThreshold = [];

Niterations = 20;

% Do calculation without pre-calculation
tic;
for ith_test = 1:Niterations
    % Call the function
    pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
        (pathWithJogs, (jogAngleThreshold), ([])); %#ok<NASGU>
end
slow_method = toc;

% Do calculation with pre-calculation, FAST_MODE on
tic;
for ith_test = 1:Niterations
    % Call the function
    pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
        (pathWithJogs, (jogAngleThreshold), (-1)); %#ok<NASGU>
end
fast_method = toc;

% Make sure plot did NOT open up
figHandles = get(groot, 'Children');
assert(~any(figHandles==figNum));

% Plot results as bar chart
figure(373737);
clf;
hold on;

X = categorical({'Normal mode','Fast mode'});
X = reordercats(X,{'Normal mode','Fast mode'}); % Forces bars to appear in this exact order, not alphabetized
Y = [slow_method fast_method ]*1000/Niterations;
bar(X,Y)
ylabel('Execution time (Milliseconds)')


% Make sure plot did NOT open up
figHandles = get(groot, 'Children');
assert(~any(figHandles==figNum));



%% BUG cases
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  ____  _    _  _____
% |  _ \| |  | |/ ____|
% | |_) | |  | | |  __    ___ __ _ ___  ___  ___
% |  _ <| |  | | | |_ |  / __/ _` / __|/ _ \/ __|
% | |_) | |__| | |__| | | (_| (_| \__ \  __/\__ \
% |____/ \____/ \_____|  \___\__,_|___/\___||___/
%
% See: http://patorjk.com/software/taag/#p=display&v=0&f=Big&t=BUG%20cases
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% All bug case figures start with the number 9

close all;

%% BUG - cuts off path when should not (SHOWS BUG)
figNum = 90001;
titleString = sprintf('BUG - cuts off path when should not (SHOWS BUG)');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

load('testData1_fcn_Path_cleanPathFromForwardBackwardJogs.mat','rawPath');
pathWithJogs = rawPath;
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (figNum));
title(titleString, 'Interpreter','none');

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Make sure plot opened up
assert(isequal(get(gcf,'Number'),figNum));

%% BUG - cuts off path when should not (FIXED)
figNum = 90002;
titleString = sprintf('BUG - cuts off path when should not (FIXED)');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

load('testData2_fcn_Path_cleanPathFromForwardBackwardJogs.mat','rawPath');
pathWithJogs = rawPath;
jogAngleThreshold = 120*pi/180;
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (figNum));
title(titleString, 'Interpreter','none');

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Make sure plot opened up
assert(isequal(get(gcf,'Number'),figNum));


%% BUG - Real world example where path jogs wierdly
figNum = 90003;
titleString = sprintf('BUG - Real world example where path jogs wierdly');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

load('testData3_fcn_Path_cleanPathFromForwardBackwardJogs.mat','rawPath');
pathWithJogs = rawPath;
jogAngleThreshold = [];
pathWithNoJogs = fcn_Path_cleanPathFromForwardBackwardJogs...
    (pathWithJogs, (jogAngleThreshold), (figNum));
title(titleString, 'Interpreter','none');

% Check variable types
assert(isnumeric(pathWithNoJogs));

% Check variable sizes
assert(length(pathWithNoJogs(:,1))<=length(pathWithJogs(:,1)));

% Make sure plot opened up
assert(isequal(get(gcf,'Number'),figNum));

%% BUG - real-world example that was not previously working
figNum = 90004;
titleString = sprintf('BUG - real-world example that was not previously working');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

startPoints = [...
   2.382127025781378  -1.581756646038485
   2.309171928057874  -1.145750021505348
   2.282662767131663  -0.995056722022869
   2.287367624690293  -0.778032815426177
   2.247744261413241  -0.525867327852700
   2.208279641368899  -0.206304726305456
   2.145775523032383   0.118860304258495
   2.081955302838964   0.549011789156652
   2.078994206962031   0.567204558880521
   2.078933740172697   0.568964862575723
   2.076723186980467   0.794802658085192
   2.037745080745749   0.946168401815517
   2.027127603837225   1.254506866856157
   1.989338390626548   1.497173562918755
   2.001895008702639   1.641780062721229
   1.930135513814969   2.063220203428516
   1.932244116790294   2.211620463493408
   1.921302695557221   2.310029363908730
   1.916529472111721   2.355556066469140
   1.895158394421256   2.766151335663927
   1.800743553804144   3.058277285561736
   1.774065498775499   3.204378149659556
   1.738390081410453   3.624616415861778
   1.736715683315172   3.658424239320890
   1.738251001646683   3.703765529346810
   1.710917908567398   3.849388157275846
   1.643677175069175   4.262835799113564
   1.639326954526304   4.284805772741763
   1.628631663785328   4.399983417777301
   1.509471946209048   4.857135697111977
   1.491750965937543   4.904229031383296
   1.447182475622905   5.010201911953916
   1.377562699750000   5.301357478442928
   1.340499137030754   5.360135238133777
   1.263499783415980   5.647482315238316
   1.208577146194354   5.855095468604810
   1.179318205599123   5.981170693175845
   1.143385888457039   6.241678027040651
   1.068500574987591   6.647400820530041
   1.059910652824073   6.685259126668516
   1.057073362253109   6.692750706013676
   1.033053970738646   6.789179516398365
   0.991625343454381   6.898320655866334
   0.994974170539389   7.050456485628965
   0.843086642727983   7.485930215432880
   0.833732091940116   7.629193204207151
   0.781665534357850   7.718449009684743
   0.769635889385288   7.793001820512802
   0.648630144336804   8.182978125966031
   0.629682460540445   8.236232594995975
   0.613840503861417   8.320461017435294
   0.574497916559255   8.409176243869791
   0.529618299573746   8.481536623457213
   0.450912489717096   8.927496809084737
   0.383935274254919   9.111325249746969
   0.357805600339796   9.150294128399908
   0.242931587365623   9.465379059076781
   0.229687803219044   9.493431247348701
   0.134087767346208   9.890514023209640
   0.071147446804269  10.000000000000000
   0.091057580203941  10.000000000000000
  -0.047789575221813  10.000000000000000
  -0.259745868263779  10.000000000000000
  -0.370553034112621  10.000000000000000
  -0.658240694876143  10.000000000000000
  -0.669463430506475  10.000000000000000
  -0.859277180835856  10.000000000000000
  -0.892023047792607  10.000000000000000
  -1.149465154578340  10.000000000000000
  -1.251040191691276  10.000000000000000
  -1.656726309719013  10.000000000000000
  -1.833139380585729  10.000000000000000
  -2.013625078144860  10.000000000000000
  -2.014760834050346  10.000000000000000
  -2.170957689189497  10.000000000000000
  -2.330972248301397  10.000000000000000
  -2.710601891802636  10.000000000000000
  -2.992748221804290  10.000000000000000
  -3.020954585608771  10.000000000000000
  -3.197003387642314  10.000000000000000
  -3.235423364320732  10.000000000000000
  -3.235757599964169  10.000000000000000
  -3.643782171789784  10.000000000000000
  -3.692488775570480  10.000000000000000
  -3.902054052470677  10.000000000000000
  -3.941949540193592  10.000000000000000
  -4.078115640214073  10.000000000000000
  -4.083859515996343  10.000000000000000
  -4.162767393736051  10.000000000000000
  -4.324224185901409   9.824204927805750
  -4.325880395739054   9.820062647102835
  -4.432784176320409   9.599120942443028
  -4.597640105368888   9.222377458826704
  -4.602683083428422   9.210164973474050
  -4.612489276395815   9.185170823632577
  -4.615083444945378   9.178552386504375
  -4.626614021409593   9.148756269663032
  -4.781423335372860   8.747382452112625
  -4.810973304679529   8.672431254299688
  -4.947993451479954   8.286427216964935
  -4.959102314083293   8.253145858738813
  -4.965045410705735   8.235550786290254
  -4.972009799789523   8.214445469432942
  -4.972227178981768   8.213788728541733
  -5.109066318858013   7.828075050062203
  -5.109944750386238   7.825461244932232
  -5.119394726265670   7.796340238247943
  -5.230450581869198   7.371238730203682
  -5.234703181133832   7.355093003656838
  -5.237672886395666   7.343446789410438
  -5.281746177721658   7.208075515121629
  -5.351014779112636   6.807068765375808
  -5.359553112519252   6.755667885722215
  -5.366487306530830   6.715809300534199
  -5.368248958765422   6.700955852990323
  -5.372466700692971   6.679708032518400
  -5.385746731599895   6.586751705643033
  -5.401494744096520   6.550169464730833
  -5.458886892445668   6.147405351376388
  -5.467925106341032   6.083264619606087
  -5.474651158863979   6.027961491566562
  -5.480537105230536   5.993080497838536
  -5.494957661047779   5.920652273246504
  -5.528868932107232   5.514900154668452
  -5.530973404663182   5.492396407229674
  -5.535001498446442   5.455292717972746
  -5.563743333585643   5.053228312349077
  -5.592992191748974   4.632324361636435
  -5.624714023239346   4.237841961385373
  -5.439525900119217   3.893751887645100
  -5.379570499640568   3.764138562841199
  -5.292513596007574   3.597390056874884
  -5.192967773591474   3.411700394532549
  -5.122815474759375   3.269336729033403
  -5.008209796913376   3.072346026374110
  -4.893868849143731   2.866458210008825
  -4.721555659377401   2.492591187628865
  -4.531866019016983   2.124567702893874
  -4.520893642630461   2.101523662772469
  -4.501774238124407   2.059945187150757
  -4.462873870486730   1.976716786684448
  -4.423539650550629   1.935787610368081
  -4.406598936603188   1.900383874413231
  -4.355137300920402   1.782931943977208
  -4.202255115087323   1.473125816153161
  -4.199730851980305   1.285839075126465
  -4.000276368004180   0.905426214094758
  -3.996662089808289   0.898472669387540
  -3.838961004441859   0.619592854696690
  -3.736413873521820   0.381280869678112
  -3.723047833796670   0.187147708694605
  -3.516875080173192  -0.201202124065181
  -3.439482640910744  -0.357332257127539
  -3.354916144893233  -0.517268436158132
  -3.268818668096858  -0.765079997863634
  -3.086543886950693  -1.114559700263334
  -3.046634774406918  -1.257583726737489
  -2.994326243340959  -1.411383551271115
  -2.878513161246139  -1.707314616711166
  -2.777421144947089  -2.166422374542876
  -2.765874560939967  -2.206323457311877
  -2.755129658279582  -2.234217835743047
  -2.754286240495925  -2.236467653329442
  -2.745504680173373  -2.518142093681397
  -2.667430203472927  -2.953331623350579
  -2.658146217169409  -3.010513172798348
  -2.651084455894715  -3.059060547106817
  -2.602561992100308  -3.337377148605635
  -2.448621451024428  -3.715397731323853
  -2.458283482291985  -3.838740401338469
  -2.430358025685290  -3.919683859554162
  -2.348871181571465  -4.243997441669140
  -2.334001846869088  -4.518860022107216
  -2.307086173048710  -4.959220578259852
  -2.304739239618573  -4.996134104401208
  -2.299604790935347  -5.139976864436457
  -2.207209803340356  -5.567047385826492
  -2.191308181815811  -5.631691411090072
  -2.144412481188230  -5.860932881630895
  -2.090648056755816  -6.034815762555885
  -2.081109112815798  -6.224935949403034
  -2.052563356153207  -6.356457365810311
  -2.044928038291765  -6.511684708787414
  -2.071157523700078  -6.737992326953096
  -2.070573965188356  -7.171919055273785
  -2.069606240591527  -7.205460378491222
  -2.100585720113691  -7.440513026796211
  -2.093546847374232  -7.832447477333912
  -2.020201963499193  -8.092229036309801
  -2.014954390715236  -8.109599412550326
  -1.965988605888858  -8.496101335825498
  -1.948962010360359  -8.916951766126401
  -1.948345626571796  -8.924022834859050
  -1.945031492521059  -8.947358798273743
  -1.944100384527854  -9.036062247214780
  -1.921093530579888  -9.347470931846175
  -1.969271602172046  -9.585458122458622
  -1.923394885028928  -9.993394957832987
  -1.912317451889930 -10.000000000000000
  -1.888189168968844 -10.000000000000000
  -1.883214120096429 -10.000000000000000
  -1.850137376523163 -10.000000000000000
  -1.842593740205858 -10.000000000000000
  -1.438150056073449 -10.000000000000000
  -1.282150569571618 -10.000000000000000
  -1.271275308298065 -10.000000000000000
  -1.230386410420707 -10.000000000000000
  -0.959776160069638 -10.000000000000000
  -0.935579568890773 -10.000000000000000
  -0.695674454731274 -10.000000000000000
  -0.508236261560299 -10.000000000000000
  -0.403724428034244 -10.000000000000000
  -0.113202580216866 -10.000000000000000
   0.009725508986301 -10.000000000000000
   0.132653598189468 -10.000000000000000
   0.239109164411178 -10.000000000000000
   0.362037253614345 -10.000000000000000
   0.484965342817512 -10.000000000000000
   0.640757718857143 -10.000000000000000
   0.695216122641762 -10.000000000000000
   0.749674526426381 -10.000000000000000
   0.804132930210999 -10.000000000000000
   0.858591333995618 -10.000000000000000
   0.909635296066742 -10.000000000000000
   1.305228628984685 -10.000000000000000
   1.444381615187966 -10.000000000000000
   1.447659155754255 -10.000000000000000
   1.481076815891520 -10.000000000000000
   1.482235820071811 -10.000000000000000
   1.881985159626964 -10.000000000000000
   1.969735542518854 -10.000000000000000
   1.977868889794281 -10.000000000000000
   1.984219329949916 -10.000000000000000
   1.994846415902377 -10.000000000000000
   2.398816324107323 -10.000000000000000
   2.490412180521793 -10.000000000000000
   2.492103818460295 -10.000000000000000
   2.493095197046361 -10.000000000000000
   2.502271672424356 -10.000000000000000
   2.470374504391684 -10.000000000000000
   2.446949372768313 -10.000000000000000
   2.446154997708351 -10.000000000000000
   2.444835594096666 -10.000000000000000
   2.443295666036538 -10.000000000000000
   2.456553299635617  -9.970726490539924
   2.432762135307580  -9.550209177507519
   2.432663642790701  -9.505224364917018
   2.432645876985606  -9.490192487766175
   2.445819581923398  -9.397015056813711
   2.421972708902739  -8.972590088685861
   2.421796238029470  -8.923864351569925
   2.403275359954259  -8.822352966103811
   2.388334168606825  -8.721441382434039
   2.385577163154860  -8.609487951398584
   2.384269123148222  -8.449426242191560
   2.335939528330120  -8.018664350595104
   2.313374798971051  -7.955233594029649
   2.312787216327352  -7.936943966163524
   2.312678821828013  -7.906093910804441
   2.269115393286328  -7.516018740856389
   2.254170667112141  -7.180903149704974
   2.259425538962556  -7.146641038231740
   2.229312861107409  -6.706205330868721
   2.229270548775036  -6.704755338487203
   2.203167601068126  -6.261904593182545
   2.186313221999078  -6.193787335129641
   2.178918245320136  -5.989584904506743
   2.156937109514849  -5.639530380298661
   2.178373783440816  -5.262706036812473
   2.171386925660058  -4.814101736766753
   2.169865720231044  -4.810353297630840
   2.192806029882418  -4.716275166069134
   2.165976639320939  -4.267409650248925
   2.165934021317590  -4.266237487242626
   2.165151800322425  -4.277421013239512
   2.163758041001169  -4.308816723501915
   2.196823763475846  -4.262140344901580
   2.173934819930056  -3.813061019013791
   2.167766020806340  -3.602311953073425
   2.147678692908261  -3.302972818002143
   2.148527215493233  -3.234557920629502
   2.188792093512808  -2.849216505700583
   2.230738648038003  -2.465935358644869
   2.286084265794200  -2.086802949841652
   2.348994292812441  -1.694120498321195
   2.350428253629638  -1.688661147598049
   2.382127025781378  -1.581756646038485];

% startPoints = fcn_Path_removePinchPointInPath
jogAngleThreshold = [];
startPoints = fcn_Path_cleanPathFromForwardBackwardJogs(startPoints, (jogAngleThreshold), (figNum));

%% BUG - real-world example that depends on jog angle threshold
figNum = 90005;
titleString = sprintf('BUG - real-world example that was not previously working');
fprintf(1,'Figure %.0f: %s\n',figNum, titleString);
figure(figNum); clf;

startPoints = [...
   -5.670060550265426  -0.679111508181282
  -5.518463840597115  -1.049436494815645
  -5.371179526462447  -1.455035608045367
  -5.338018198472700  -1.561933914195701
  -5.270602573609158  -1.984440095087457
  -5.211688875246534  -2.360996271621747
  -5.175359403935678  -2.786878292584544
  -5.169433917837815  -2.906287265368882
  -5.195858537577371  -3.331390739464461
  -5.200653729613303  -3.382430322198700
  -5.261855552426627  -3.773725492084143
  -5.356944874099582  -4.136999237415955
  -5.523177336245906  -4.520121214515676
  -5.527650872133988  -4.529151156328628
  -5.704002356859609  -4.895466762677103
  -5.902935961723009  -5.238873352176144
  -6.136982023268684  -5.597785527979401
  -6.151143912633588  -5.619998464664369
  -6.366672819090874  -5.992589232455512
  -6.372597659321795  -6.002570723724753
  -6.630254394732694  -6.350697179770572
  -6.691167136819036  -6.439246829202554
  -6.938295682894532  -6.801609897928943
  -7.118179156909490  -7.025416766754680
  -7.325399628557233  -7.388301117622599
  -7.512690582561837  -7.628139444212342
  -7.739384561370168  -8.016954720851535
  -7.975126003945246  -8.384877903118678
  -8.003536089062470  -8.440980208611165
  -8.123792363898863  -8.846646683761728
  -8.241039665925113  -9.220724746893481
  -8.267130202915288  -9.629867503874266
  -8.264736850359633 -10.038023752152913
  -8.263057015123730 -10.324498574256197
  -7.856747200435803 -10.332433801879809
  -7.450651957743422 -10.345749866472595
  -7.345137837876744 -10.352191929556621
  -6.938495909311523 -10.346677694959480
  -6.865203428494447 -10.346677694959480
  -6.458770165243847 -10.347728699384042
  -6.067793600485672 -10.355716474447778
  -5.661765146123380 -10.370856784049352
  -5.641751822633559 -10.370856784049352
  -5.235918043842927 -10.393208236742167
  -5.106973257559132 -10.393208236742167
  -4.701327984320066 -10.422674770718642
  -4.553323714606211 -10.459011680644272
  -4.148033894128816 -10.501834749047212
  -4.024313649311754 -10.501834749047212
  -3.619189315923467 -10.550631966977896
  -3.223666873780303 -10.604777281597221
  -2.822187876454850 -10.663545792720106
  -2.417503333036063 -10.726129834663844
  -2.148512543678803 -10.791655420867027
  -1.744068859546394 -10.859198592024930
  -1.367807264001566 -10.927801288246417
  -0.963559026464820 -10.996486455596557
  -0.885510308079108 -10.996486455596557
  -0.485337055810188 -11.064272190742619
  -0.081236593619220 -11.130184817943604
   0.008378440850432 -11.130184817943604
   0.408305444665825 -11.193270874504176
   0.812308053933586 -11.252608049286417
   0.846970397690154 -11.252608049286417
   1.250943685533549 -11.307315170354773
   1.581166880529819 -11.356561370120323
   1.985123182960457 -11.399574568729063
   2.156510171450484 -11.399574568729063
   2.560480079655430 -11.435649409597165
   2.636982138522030 -11.464154756930586
   3.041027349785514 -11.484540826910578
   3.361716602000262 -11.484540826910578
   3.765825296116662 -11.496345975922395
   3.771575207381613 -11.496345975922395
   4.175765858886349 -11.499203115268870
   4.191687861589863 -11.499203115268870
   4.595979874305979 -11.492845667000127
   4.671148872334445 -11.477112924426722
   4.844608753339863 -11.477112924426722
   4.918034710414364 -11.075608403937787
   4.991460667488866 -10.674103883448852
   5.003933052638692 -10.473434621108407
   5.070898239351632 -10.495020063160611
   4.873658211104531 -10.135515012462973
   4.873353441891225 -10.134777863050186
   4.728653646521724  -9.753124590608587
   4.545193322722085  -9.378717690455648
   4.398783751121989  -8.988261334005474
   4.269763827191063  -8.673734636397155
   4.147957606588974  -8.253079937610046
   4.047799029171732  -7.921375945019144
   3.978282108006729  -7.494051440549510
   3.937119114177428  -7.240703489207994
   3.852519091422601  -6.806322935253956
   3.777176524947278  -6.418660215205429
   3.719556689817236  -5.977961425460892
   3.680269977977688  -5.720929456576727
   3.636167678392270  -5.277257858786444
   3.596340031205567  -4.859303544024611
   3.575375386166540  -4.414058634677433
   3.571126253278112  -4.205002298536272
   3.571924755187835  -3.759981149697591
   3.569250298626679  -3.536576446753509
   3.604011996550222  -3.094761075876292
   3.621563798740828  -2.916778718571539
   3.688411839550148  -2.480185167600204
   3.688939263539937  -2.477147320180495
   3.775380760436919  -2.045415719066256
   3.782783771768690  -2.011551699049197
   3.829700537085783  -1.594591795075534
   3.851138020009842  -1.479797910089653
   3.991724929825502  -1.082316359533970
   4.154566396114118  -0.679409240701912
   4.208773276603698  -0.511533884780426
   4.414513462969607  -0.132457180909222
   4.415337772996013  -0.130909215817015
   4.611909680390930   0.194230181953274
   4.857473774489518   0.547548505300574
   4.924275495838919   0.647021748331021
   5.171697824183156   0.983972585168699
   5.213219306842260   1.041852942573260
   5.473920241092986   1.375883455165269
   5.522505199208224   1.441148606905960
   5.776707878656662   1.783871244416117
   5.843506648796805   1.882972863578361
   6.100062676557019   2.225197660335751
   6.115981669621736   2.248439116845328
   6.377549295944188   2.593997589034219
   6.459190403436597   2.712919682719590
   6.701551093585119   3.058360764669187
   6.908258767312069   3.352996025619834
   7.145721295556624   3.698476894921221
   7.363817951367993   4.025165505419258
   7.549631863505766   4.394450820097234
   7.672520637528460   4.686045381972955
   7.847877396317852   5.093891131147485
   7.983049729288870   5.385136186374361
   8.111659572947810   5.772423064381094
   8.142934145968857   5.888139426329753
   8.203742788597715   6.287700616291950
   8.251391001662022   6.573880676115778
   8.258904984822376   6.976045336496607
   8.256501522407993   7.082509817615654
   8.216381728534076   7.481526986217172
   8.201237861166581   7.592351943568922
   8.146977160555450   7.990026508623065
   8.123477790465408   8.198839420910710
   7.942045463078549   8.555205734353153
   7.815541211151716   8.748055738721714
   7.606999976420290   9.089037677458981
   7.489112132836658   9.258545734690042
   7.205137408727659   9.551727601817895
   6.925936549833219   9.827353679284132
   6.784341005392774   9.973540091565321
   6.381516057982516  10.040397256435783
   6.157152503000098  10.086978573219167
   5.748027115788340  10.105115053261223
   5.706650467415368  10.105115053261223
   5.297612028795085  10.134352732312536
   5.123552498038716  10.134352732312536
   4.714626946903102  10.173988104819761
   4.678009491298862  10.173988104819761
   4.269218553949504  10.223066069059863
   3.966903560154714  10.280412322450816
   3.558426967158802  10.344671448704101
   3.369692735419013  10.414349329442294
   2.961553482516874  10.487858387460514
   2.803988325960024  10.487858387460514
   2.396012113982732  10.563564100065729
   2.290328646254145  10.563564100065729
   1.882504524162786  10.639831211547303
   1.873662959802933  10.639831211547303
   1.465975162676891  10.715068123957250
   1.152370297226294  10.787768052586365
   0.745577080605969  10.856545691868174
   0.338166264828641  10.920168341621780
   0.273902052675144  10.920168341621780
  -0.133468549301385  10.977580683283259
  -0.509385917972957  11.027922660243894
  -0.915968300888412  11.070540193768908
  -1.323381652446524  11.104988743991695
  -1.448168038967389  11.131029992209687
  -1.855729934120391  11.148622165018933
  -1.940888521148449  11.148622165018933
  -2.348551699404126  11.157904733057801
  -2.403412957200795  11.157904733057801
  -2.811190030849413  11.159178389554159
  -2.925804406491638  11.159178389554159
  -3.333703495045675  11.152881340934908
  -3.735214148136576  11.139563020468659
  -4.143363029452349  11.119856365711838
  -4.150293905666899  11.119856365711838
  -4.558561451711405  11.094449783253550
  -4.886440595270809  11.064059863903118
  -5.294912402806141  11.029405813772568
  -5.377984644260925  11.029405813772568
  -5.786535246300117  10.991186438672511
  -5.858381512130387  10.991186438672511
  -6.266991870643279  10.950060368656162
  -6.417583284231225  10.906630044492051
  -6.826250012339488  10.861429816066090
  -7.111488099856013  10.861429816066090
  -7.520150400075284  10.814918331375912
  -7.718868476367442  10.767475230026497
  -8.127460000315935  10.719402001914096
  -8.358026469374312  10.719402001914096
  -8.766555181637242  10.670926733757142
  -8.942646228886476  10.622212345735322
  -9.351008012996497  10.573367819024050
  -9.534582928285557  10.573367819024050
  -9.942847479035297  10.548923665789395
 -10.008503549235948  10.548923665789395
 -10.171536388956032  10.174734483265151
 -10.341806144155786   9.800646586184527
 -10.519090471977876   9.426658322631788
 -10.536182711563391   9.387428611801788
 -10.549873877973797   8.979562615140990
 -10.549873877973797   8.962145992362970
 -10.562768642537424   8.554371469156720
 -10.562768642537424   8.546668822399955
 -10.574620589318716   8.138979362489058
 -10.585172222454201   7.802649993789002
 -10.594155710155270   7.395105692117403
 -10.594155710155270   7.320308286241728
 -10.601295270174978   6.912821457985828
 -10.606311257030756   6.537467737497943
 -10.608925912729504   6.130059984179743
 -10.608925912729504   6.023315248235563
 -10.608870643565954   5.615927243122387
 -10.605894590688635   5.413989289639376
 -10.599774176426441   5.006597731613203
 -10.599774176426441   4.852007262495562
 -10.590323236301757   4.444591523185546
 -10.577403292158067   4.202153550166894
 -10.560933487999128   3.794643825563220
 -10.560933487999128   3.560030073103484
 -10.540899699077952   3.152450813704901
 -10.517362337541810   3.029238503107788
 -10.490462414297134   2.621477355114031
 -10.490462414297134   2.462323824709995
 -10.460425475336718   2.054451897888698
 -10.427563108968910   1.649706489393855
 -10.392271814559583   1.241579006629645
 -10.392271814559583   1.223834297247913
 -10.355029129039934   0.815565003451610
 -10.355029129039934   0.736948897736205
 -10.213637868150080   0.341675244809068
 -10.089490995358156   0.015551164942926
  -9.704724596121697  -0.120654815703907
  -9.281065929615638  -0.228479214121386
  -9.278439964594538  -0.229408796698121
  -8.873132515378925  -0.137028878275182
  -8.634642768956184  -0.116278405929170
  -8.295274480477209   0.089614941996576
  -8.038288771853445   0.243757646801920
  -7.676847562028088   0.476210784398809
  -7.569033663279210   0.552409653012698
  -7.235061480332152   0.827873643270843
  -7.225203218334294   0.834599003712932
  -7.077466314911805   0.862072364791307
  -6.726736285760372   0.701122972941219
  -6.714902903060861   0.694404169326397
  -6.406398502547093   0.425607741036854
  -6.239055095090206   0.247683660757942
  -6.028244451705162  -0.037025226886358
  -5.820661178381673  -0.416358855073975
  -5.670060550265426  -0.679111508181282];

% jogAngleThreshold = []; % Gives WRONG answer
jogAngleThreshold = 120*pi/180;
startPoints = fcn_Path_cleanPathFromForwardBackwardJogs(startPoints, (jogAngleThreshold), (figNum));

%% Functions follow
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   ______                _   _
%  |  ____|              | | (_)
%  | |__ _   _ _ __   ___| |_ _  ___  _ __  ___
%  |  __| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
%  | |  | |_| | | | | (__| |_| | (_) | | | \__ \
%  |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
%
% See: https://patorjk.com/software/taag/#p=display&f=Big&t=Functions
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%§
